{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","reverseList","setState","isWorking","sortByAlphabet","ALPABET","sortByLength","LENGTH","resetList","this","goods","visibleGoods","sort","a","b","localeCompare","length","reverse","getReorderedGoods","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,kFAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,EAOEC,YAAc,WACZ,EAAKC,UAAS,SAAAN,GACZ,MAAO,CACLE,YAAaF,EAAME,gBAV3B,EAeEK,UAAY,WACV,EAAKD,SAAS,CAAEL,WAAW,KAhB/B,EAmBEO,eAAiB,WACf,EAAKF,SAAS,CAAEH,SAAUN,EAASY,WApBvC,EAuBEC,aAAe,WACb,EAAKJ,SAAS,CAAEH,SAAUN,EAASc,UAxBvC,EA2BEC,UAAY,WACV,EAAKN,SAAS,CACZJ,YAAY,EACZC,SAAUN,EAASO,QA9BzB,4CAkCE,WACE,MAA4CS,KAAKb,MAAzCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SACzBW,EA7DV,SACEA,EACAX,EACAD,GAEA,IAAMa,EAAY,YAAOD,GAezB,OAbAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQf,GACN,KAAKN,EAASY,QACZ,OAAOQ,EAAEE,cAAcD,GAEzB,KAAKrB,EAASc,OACZ,OAAOM,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAINlB,EACHa,EAAaM,UACbN,EAuCYO,CAAkBxB,EAAiBK,EAAUD,GAE3D,OACE,qBAAKqB,UAAU,kCAAf,SACGtB,EAEG,qCACE,wBACEuB,KAAK,SACLC,QAASZ,KAAKL,eACde,UAAU,kCAHZ,iCAQA,wBACEC,KAAK,SACLC,QAASZ,KAAKH,aACda,UAAU,kCAHZ,4BAQA,wBACEC,KAAK,SACLC,QAASZ,KAAKR,YACdkB,UAAU,kCAHZ,qBAQA,wBACEC,KAAK,SACLC,QAASZ,KAAKD,UACdW,UAAU,6BAHZ,mBAQA,oBAAIA,UAAU,QAAd,SACGT,EAAMY,KAAI,SAAAC,GACT,OACE,oBAAeJ,UAAU,cAAzB,SAAwCI,GAA/BA,WAOjB,wBACEH,KAAK,SACLC,QAASZ,KAAKN,UACdgB,UAAU,iBAHZ,yBArFZ,GAAyBK,IAAMC,WCnD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1fe92fd3.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverseList = () => {\n    this.setState(state => {\n      return {\n        isReversed: !state.isReversed,\n      };\n    });\n  };\n\n  isWorking = () => {\n    this.setState({ isStarted: true });\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  resetList = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isStarted, isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n    return (\n      <div className=\"App block notification is-white\">\n        {isStarted\n          ? (\n            <>\n              <button\n                type=\"button\"\n                onClick={this.sortByAlphabet}\n                className=\"button is-link is-outlined mr-3\"\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={this.sortByLength}\n                className=\"button is-link is-outlined mr-3\"\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={this.reverseList}\n                className=\"button is-link is-outlined mr-3\"\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={this.resetList}\n                className=\"button is-info is-outlined\"\n              >\n                Reset\n              </button>\n\n              <ul className=\"Goods\">\n                {goods.map(good => {\n                  return (\n                    <li key={good} className=\"Goods__item\">{good}</li>\n                  );\n                })}\n              </ul>\n            </>\n          )\n          : (\n            <button\n              type=\"button\"\n              onClick={this.isWorking}\n              className=\"button is-info\"\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}